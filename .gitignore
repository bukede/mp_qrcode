# Logs
logs
log
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
#build

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
#typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

.DS_Store

# Generated by Cargo
# will have compiled files and executables
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

dist
#static
#public
cjs
esm
release
.cache
core
.zip
.tgz
#*.pdf
NotoSansCJKsc-Bold.otf
ffmpeg
ossutil64
vi.txt
fixtures/
extra/
extraDir/
tmp/
*.mp3
*.mp4
*.m4s
*.m3u8
*.webm
*.zip
locales/
swiftshader/
.mypy_cache/
__pycache__/
.idea/
ossutil_output/
output/
*.zip
*.tar
*.tar.zstd
*.ttc
**/src/warp
**/project/build
_snowpack/
qshell
uploads/
public/
#assets/
routes.json
context-*.json
context.json
tag-*/
cache/
.ruff_cache/

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*

test/

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

**/examples/**/

**/article/
**/qdrant/

*.pt

.data

.nuxt

downloads/
hysteria-linux-amd64

data_hot_week
data_prod_week


